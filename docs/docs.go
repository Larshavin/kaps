// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/kaas/{id}": {
            "post": {
                "description": "Create openstack Server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server_create"
                ],
                "summary": "Create openstack Server",
                "parameters": [
                    {
                        "description": "cluster info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.KaasCreateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/network": {
            "get": {
                "description": "get Network List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Network List",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/server/{id}": {
            "post": {
                "description": "Create openstack Server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server_create"
                ],
                "summary": "Create openstack Server",
                "parameters": [
                    {
                        "description": "server info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ServerCreateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "types.KaasCreateRequest": {
            "type": "object",
            "properties": {
                "control_plane_nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Node"
                    }
                },
                "data_plane_nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Node"
                    }
                },
                "flavor": {
                    "type": "string"
                },
                "keypair": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "types.Node": {
            "type": "object",
            "properties": {
                "fixed_ip": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "main": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.Server": {
            "type": "object",
            "properties": {
                "flavorRef": {
                    "type": "string"
                },
                "imageRef": {
                    "type": "string"
                },
                "key_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServerCreateNetwork"
                    }
                },
                "security_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServerCreateSecurityGroup"
                    }
                },
                "user_data": {
                    "type": "string"
                }
            }
        },
        "types.ServerCreateNetwork": {
            "type": "object",
            "properties": {
                "fixed_ip": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "types.ServerCreateRequest": {
            "type": "object",
            "properties": {
                "server": {
                    "$ref": "#/definitions/types.Server"
                }
            }
        },
        "types.ServerCreateSecurityGroup": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "192.168.15.248:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "KAPS API document",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
